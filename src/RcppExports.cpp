// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// hdelaunay_K
Rcpp::List hdelaunay_K(const Rcpp::NumericMatrix points, const bool isolations);
RcppExport SEXP _gyro_hdelaunay_K(SEXP pointsSEXP, SEXP isolationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< const bool >::type isolations(isolationsSEXP);
    rcpp_result_gen = Rcpp::wrap(hdelaunay_K(points, isolations));
    return rcpp_result_gen;
END_RCPP
}
// hdelaunay_EK
Rcpp::List hdelaunay_EK(const Rcpp::NumericMatrix points, const bool isolations);
RcppExport SEXP _gyro_hdelaunay_EK(SEXP pointsSEXP, SEXP isolationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< const bool >::type isolations(isolationsSEXP);
    rcpp_result_gen = Rcpp::wrap(hdelaunay_EK(points, isolations));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gyro_hdelaunay_K", (DL_FUNC) &_gyro_hdelaunay_K, 2},
    {"_gyro_hdelaunay_EK", (DL_FUNC) &_gyro_hdelaunay_EK, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_gyro(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
